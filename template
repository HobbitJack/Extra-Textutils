#!/usr/bin/python
# template program for textutile

import getopt
import stat
import os
import sys
import string

short_options = "o:hv"
long_options = [
    "option-1=",
    "help",
    "version",
]

try:
    options, positional_arguments = getopt.gnu_getopt(
        sys.argv[1:], short_options, long_options
    )
except getopt.GetoptError as error:
    print(f"TOOL_NAME: '-{error.opt}': Option not recognized")
    sys.exit(1)

for option in options:
    argument = option[1]
    option = option[0]

    if option == "-h" or option == "--help":
        print("Usage: TOOL_NAME [OPTION]... [FILE]")
        print("Does important things")
        print()
        print("  -o, --option-1=VALUE    set option 1 to VALUE")
        print("  -h, --help              display this help and exit")
        print("  -v, --version           display version information and exit")
        print()
        print("For full documentation, try 'man TOOL_NAME'.")
        sys.exit(0)
    elif option == "-v" or option == "--version":
        print("TOOL_NAME (TextUtils) v1.0.0")
        print("Copyright (C) 2024 HobbitJack.")
        print(
            "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
        )
        print("This is free software: you are free to change and redistribute it.")
        print("There is NO WARRANTY, to the extent permitted by law.")
        print()
        print("Written by HobbitJack.")
        sys.exit(0)
    elif option == "-o" or option == "--option-1":
        option_1 = argument

if not positional_arguments:
    if stat.S_ISFIFO(os.fstat(0).st_mode):
        input_file = "-"
    else:
        print("TOOL_NAME: Missing operand")
        sys.exit(1)
else:
    if len(positional_arguments) > 1:
        print("TOOL_NAME: Too many arguments")
        sys.exit(1)
    else:
        input_file = positional_arguments[0]

if input_file == "-":
    all_lines = sys.stdin.read().splitlines()
else:
    if os.path.isfile(input_file):
        pass
    elif os.path.isfile(f"{os.getcwd}/{input_file}"):
        input_file = f"{os.getcwd}/{input_file}"
    elif os.path.isdir(input_file) or os.path.isdir(f"{os.getcwd}/{input_file}"):
        print(f"TOOL_NAME: {input_file}: Is a directory")
        sys.exit(1)
    else:
        print(f"TOOL_NAME: {input_file}: No such file or directory")
        sys.exit(1)

    with open(input_file, mode="r", encoding="utf8") as text_file:
        all_lines = text_file.read().splitlines()
