#!/usr/bin/python
# Strip whitespace from a line

import getopt
import stat
import os
import sys
import string

short_options = "efF:ls:hv"
long_options = [
    "empty-line",
    "field",
    "fields",
    "separator=",
    "help",
    "version",
]

FIELDS = False
LINE_MODE = False
SEPARATOR = "\t"
EMPTY_LINES = False

try:
    options, positional_arguments = getopt.gnu_getopt(
        sys.argv[1:], short_options, long_options
    )
except getopt.GetoptError as error:
    print(f"wstrip: '-{error.opt}': Option not recognized")
    sys.exit(1)

for option in options:
    argument = option[1]
    option = option[0]

    if option == "-h" or option == "--help":
        print("Usage: wstrip [OPTION]... [FILE]")
        print("Strip leading and trailing whitespace from each line of input")
        print()
        print("  -e, --empty-line             also strip empty lines")
        print(
            "  -f, --field                  strip whitespace from each field in the line"
        )
        print(
            "  -F, --fields=FIELDS          only strip whitespace from each field in FIELDS"
        )
        print("  -s, --separator=SEPARATOR    separate fields with SEPARATOR")
        print("  -h, --help                   display this help and exit")
        print("  -v, --version                display version information and exit")
        print()
        print("For full documentation, try 'man wstrip'.")
        sys.exit(0)
    elif option == "-v" or option == "--version":
        print("wstrip (TextUtils) v1.0.0")
        print("Copyright (C) 2024 HobbitJack.")
        print(
            "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
        )
        print("This is free software: you are free to change and redistribute it.")
        print("There is NO WARRANTY, to the extent permitted by law.")
        print()
        print("Written by HobbitJack.")
        sys.exit(0)
    elif option == "-e" or option == "--empty-lines":
        EMPTY_LINES = True
    elif option == "-f" or option == "--field":
        FIELDS = True
    elif option == "-F" or option == "--fields":
        FIELDS = []
        try:
            for field in argument.split(","):
                if "-" in field:
                    for i in range(
                        int(field.split("-")[0]), int(field.split("-")[1]) + 1
                    ):
                        FIELDS.append(i)
                else:
                    FIELDS.append(int(field))
        except ValueError:
            print(f"wstrip: {argument}: Invalid field selection")
            sys.exit(1)

    elif option == "-s" or option == "--separator":
        SEPARATOR = argument

if stat.S_ISFIFO(os.fstat(0).st_mode):
    input_file = "-"
else:
    if not len(positional_arguments):
        print(f"wstrip: Missing operand")
        sys.exit(1)

    input_file = positional_arguments.pop()

if positional_arguments:
    print(f"wstrip: '{positional_arguments[0]}': Extra operand")
    sys.exit(1)

if input_file == "-":
    all_lines = sys.stdin.read().splitlines()
else:
    if os.path.isfile(input_file):
        pass
    elif os.path.isfile(f"{os.getcwd}/{input_file}"):
        input_file = f"{os.getcwd}/{input_file}"
    elif os.path.isdir(input_file) or os.path.isdir(f"{os.getcwd}/{input_file}"):
        print(f"wstrip: {input_file}: Is a directory")
        sys.exit(1)
    else:
        print(f"wstrip: {input_file}: No such file or directory")
        sys.exit(1)

    with open(input_file, mode="r", encoding="utf8") as text_file:
        all_lines = text_file.read().splitlines()

for line in all_lines:
    if (line.strip() == "") and EMPTY_LINES:
        continue
    if FIELDS:
        for field, value in enumerate(line.split(SEPARATOR)):
            field += 1
            if FIELDS is True or field in FIELDS:
                print(value.strip(), end="")
            else:
                print(value, end="")

            if field != len(line.split(SEPARATOR)):
                print(SEPARATOR, end="")
            else:
                print()
    else:
        print(line.strip())
