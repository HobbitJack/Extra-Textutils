#!/usr/bin/python
# delete lines with empty fields

import getopt
import stat
import os
import sys

SEPARATOR = "\t"
STRIP = True
fields = False

short_options = "s:whv"
long_options = [
    "separator=",
    "whitespace",
    "help",
    "version",
]

try:
    options, positional_arguments = getopt.gnu_getopt(
        sys.argv[1:], short_options, long_options
    )
except getopt.GetoptError as error:
    print(f"fdel: '-{error.opt}': Option not recognized", file=sys.stderr)
    sys.exit(1)

for option in options:
    argument = option[1]
    option = option[0]

    if option == "-h" or option == "--help":
        print("Usage: fdel [OPTION]... [FIELD]... [FILE]")
        print("Remove lines if any of given FIELD is empty, or if any field is empty")
        print()
        print(
            "  -s, --separator=SEPARATOR    use SEPARATOR instead of tab to separate fields"
        )
        print("  -w, --whitespace             treat whitespace as a valid field fill")
        print("  -h, --help                   display this help and exit")
        print("  -v, --version                display version information and exit")
        print()
        print("For full documentation, try 'man fdel'.")
        sys.exit(0)
    elif option == "-v" or option == "--version":
        print("fdel (Extra Textutils) v1.0.0")
        print("Copyright (C) 2024-2025 HobbitJack.")
        print(
            "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
        )
        print("This is free software: you are free to change and redistribute it.")
        print("There is NO WARRANTY, to the extent permitted by law.")
        print()
        print("Written by HobbitJack.")
        sys.exit(0)
    elif option == "-s" or option == "--separator":
        SEPARATOR = argument
    elif option == "-w" or option == "--whitespace":
        STRIP = False

if stat.S_ISFIFO(os.fstat(0).st_mode):
    input_file = "-"
else:
    if not len(positional_arguments):
        print("fdel: Missing operand", file=sys.stderr)
        sys.exit(1)

    input_file = positional_arguments.pop()

for field in positional_arguments:
    try:
        field = int(field)
    except ValueError:
        print(f"ror: {field}: Invalid field", file=sys.stderr)
        sys.exit(1)

if positional_arguments:
    fields = list(int(field) for field in positional_arguments)

if input_file == "-":
    all_lines = sys.stdin.read().splitlines()
else:
    if os.path.isfile(input_file):
        pass
    elif os.path.isfile(f"{os.getcwd}/{input_file}"):
        input_file = f"{os.getcwd}/{input_file}"
    elif os.path.isdir(input_file) or os.path.isdir(f"{os.getcwd}/{input_file}"):
        print(f"fdel: {input_file}: Is a directory", file=sys.stderr)
        sys.exit(1)
    else:
        print(f"fdel: {input_file}: No such file or directory", file=sys.stderr)
        sys.exit(1)

    with open(input_file, mode="r", encoding="utf8") as text_file:
        all_lines = text_file.read().splitlines()

for line in all_lines:
    line = line.split(SEPARATOR)
    if fields:
        for field in fields:
            if len(line) < field or not (
                line[field - 1].strip() if STRIP else line[field - 1]
            ):
                break
        else:
            print(SEPARATOR.join(line))
    elif all((part.strip() if STRIP else part) for part in line):
        print(SEPARATOR.join(line))
