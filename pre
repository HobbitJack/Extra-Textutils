#!/usr/bin/python
# add a prefix to each input line

import getopt
import stat
import os
import sys
import string

EXPRESSION = False
SEPARATOR = ""
SKIP_HEADER = False

short_options = "esSthv"
long_options = [
    "expression",
    "space",
    "skip-header",
    "tab",
    "help",
    "version",
]

try:
    options, positional_arguments = getopt.gnu_getopt(
        sys.argv[1:], short_options, long_options
    )
except getopt.GetoptError as error:
    print(f"pre: '-{error.opt}': Option not recognized")
    sys.exit(1)

for option in options:
    argument = option[1]
    option = option[0]

    if option == "-h" or option == "--help":
        print("Usage: pre [OPTION]... [PREFIX] [FILE]")
        print("Add PREFIX before each line of input")
        print()
        print("  -e, --expression     execute PREFIX as a shell command for each line")
        print("  -s, --space          place a space between PREFIX and each line")
        print("  -S, --skip-header    do not put PREFIX on the first line of input")
        print("  -t, --tab            place a tab between PREFIX and each line")
        print("  -h, --help           display this help and exit")
        print("  -v, --version        display version information and exit")
        print()
        print("For full documentation, try 'man pre'.")
        sys.exit(0)
    elif option == "-v" or option == "--version":
        print("pre (DSVUtils) v1.0.0")
        print("Copyright (C) 2024 HobbitJack.")
        print(
            "License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>."
        )
        print("This is free software: you are free to change and redistribute it.")
        print("There is NO WARRANTY, to the extent permitted by law.")
        print()
        print("Written by HobbitJack.")
        sys.exit(0)
    elif option == "-e" or option == "--expression":
        EXPRESSION = True
    elif option == "-s" or option == "--space":
        SEPARATOR = " "
    elif option == "-S" or option == "--skip-header":
        SKIP_HEADER = True
    elif option == "-t" or option == "--tab":
        SEPARATOR = "\t"

if stat.S_ISFIFO(os.fstat(0).st_mode):
    input_file = "-"
else:
    if not len(positional_arguments):
        print(f"pre: Missing operand")
        sys.exit(1)

    input_file = positional_arguments.pop()

if positional_arguments:
    prefix = positional_arguments.pop(0)
else:
    prefix = ""

if positional_arguments:
    print(f"pre: '{positional_arguments[0]}': Extra operand")
    sys.exit(1)

if input_file == "-":
    all_lines = sys.stdin.read().splitlines()
else:
    if os.path.isfile(input_file):
        pass
    elif os.path.isfile(f"{os.getcwd}/{input_file}"):
        input_file = f"{os.getcwd}/{input_file}"
    elif os.path.isdir(input_file) or os.path.isdir(f"{os.getcwd}/{input_file}"):
        print(f"pre: {input_file}: Is a directory")
        sys.exit(1)
    else:
        print(f"pre: {input_file}: No such file or directory")
        sys.exit(1)

    with open(input_file, mode="r", encoding="utf8") as text_file:
        all_lines = text_file.read().splitlines()

for line in all_lines:
    if SKIP_HEADER:
        SKIP_HEADER = False
        print(line)
        continue
    if EXPRESSION:
        os.environ["line"] = line
        print(f"{os.popen(prefix).read()[:-1]}{SEPARATOR}{line}")
        os.environ["line"] = ""
        continue
    print(f"{prefix}{SEPARATOR}{line}")
